{{- $fullName := include "chart.fullname" . -}}
{{- $name := "app" -}}
{{- $data := dict "name" $name "Chart" .Chart "Release" .Release "Values" .Values -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullName }}-{{ $name }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "chart.labels" $data | nindent 4 }}
  {{- if .Values.annotations }}
  annotations:
{{ toYaml .Values.annotations | indent 4 }}
  {{- end }}
spec:
  serviceName: {{ $fullName }}-{{ $name }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ .Values.replicaCount }}
  updateStrategy:
    type: {{ .Values.updateStrategyType }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" $data | nindent 6 }}
  template:
    metadata:
      {{- with .Values.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chart.selectorLabels" $data | nindent 8 }}
    spec:
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      imagePullSecrets: 
        - name: {{ $fullName }}-{{ $name }}
      containers:
        - name: {{ .Chart.Name }}-{{ $name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: configuration
              mountPath: /etc/acme-dns
              readOnly: true
            - name: data
              mountPath: /var/lib/acme-dns
          ports:
            - name: http
              containerPort: {{ .Values.service.http.containerPort }}
              protocol: TCP
            - name: tcpdns
              containerPort: {{ .Values.service.tcp.containerPort }}
              protocol: TCP
            - name: udpdns
              containerPort: {{ .Values.service.udp.containerPort }}
              protocol: UDP
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.http.containerPort }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- else if .Values.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.http.containerPort }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- else if .Values.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: configuration
          configMap:
            name: {{ $fullName }}-{{ $name }}
            items:
            - key: advanced.config
              path: config.cfg
  {{- if not (contains "data" (quote .Values.persistence.volumes)) }}
  {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            {{- with .Values.persistence.existingClaim }}
            claimName: {{ tpl . $ }}
            {{- end }}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "chart.labels" $data | nindent 10 }}
        {{- if .Values.persistence.annotations }}
        annotations:
        {{ toYaml .Values.persistence.annotations | indent 10 }}
        {{- end }}
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{ include "common.storage.class" (dict "persistence" .Values.persistence "global" .Values.global) }}
        {{- if .Values.persistence.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.selector "context" $) | nindent 10 }}
        {{- end -}}
  {{- end }}
  {{- end }}

